{"version":3,"sources":["../node_modules/preact/src/vnode.js","../node_modules/preact/src/h.js","../node_modules/preact/src/util.js","../node_modules/preact/src/linked-state.js","../node_modules/preact/src/render-queue.js","../node_modules/preact/src/vdom/functional-component.js","../node_modules/preact/src/vdom/index.js","../node_modules/preact/src/dom/index.js","../node_modules/preact/src/dom/recycler.js","../node_modules/preact/src/vdom/diff.js","../node_modules/preact/src/vdom/component-recycler.js","../node_modules/preact/src/vdom/component.js","../node_modules/preact/src/component.js","../src/app/util.js","../node_modules/preact/src/options.js","../node_modules/preact/src/constants.js","../src/app/model.js","../src/app/footer.js","../src/app/item.js","../src/app/index.js","../node_modules/preact/src/render.js","../src/index.js"],"names":["VNode","nodeName","attributes","children","key","h","lastSimple","child","simple","i","arguments","length","push","stack","pop","Array","String","p","undefined","EMPTY_CHILDREN","options","vnode","extend","obj","props","clone","delve","split","isFunction","isString","hashToClassName","c","str","prop","createLinkedState","component","eventPath","path","e","t","target","this","state","v","type","match","checked","value","setState","enqueueRender","_dirty","items","debounceRendering","defer","rerender","list","renderComponent","isFunctionalComponent","prototype","render","buildFunctionalComponent","context","getNodeProps","EMPTY","isSameNodeType","node","Text","_componentConstructor","isNamedNode","normalizedNodeName","toLowerCase","defaultProps","removeNode","parentNode","removeChild","setAccessor","name","old","isSvg","_typeof","style","cssText","NON_DIMENSION_PROPS","innerHTML","__html","l","_listeners","substring","addEventListener","eventProxy","NON_BUBBLING_EVENTS","removeEventListener","removeAttribute","ns","removeAttributeNS","setAttributeNS","setAttribute","className","setProperty","event","collectNode","Element","_component","nodes","createNode","document","createElementNS","createElement","flushMounts","mounts","afterMount","componentDidMount","diff","dom","mountAll","parent","componentRoot","diffLevel","ownerSVGElement","ATTR_KEY","ret","idiff","appendChild","ref","nodeValue","recollectNodeTree","createTextNode","buildComponentFromVNode","out","isSvgMode","vchildren","firstChild","replaceChild","fc","a","hydrating","nextSibling","dangerouslySetInnerHTML","prevSvgMode","innerDiffNode","absorb","originalChildren","childNodes","keyed","keyedLen","min","len","childrenLen","vlen","j","vchild","__key","insertBefore","unmountOnly","lastChild","diffAttributes","attrs","collectComponent","constructor","components","createComponent","Ctor","inst","call","nextBase","splice","setComponentProps","opts","_disable","__ref","base","componentWillMount","componentWillReceiveProps","prevContext","prevProps","NO_RENDER","SYNC_RENDER","syncComponentUpdates","isChild","skip","rendered","previousProps","previousState","prevState","previousContext","isUpdate","initialBase","initialChildComponent","cbase","FORCE_RENDER","shouldComponentUpdate","componentWillUpdate","getChildContext","childComponent","toUnmount","childProps","_parentComponent","baseParent","componentRef","unshift","componentDidUpdate","afterUpdate","cb","_renderCallbacks","fn","originalComponent","oldDom","isDirectOwner","isOwner","ASYNC_RENDER","unmountComponent","remove","beforeUnmount","componentWillUnmount","inner","componentDidUnmount","Component","uuid","random","Math","toString","pluralize","count","word","lcCache","s","resolved","Promise","resolve","f","then","setTimeout","Symbol","for","boxFlexGroup","columnCount","fillOpacity","flex","flexGrow","flexShrink","flexNegative","fontWeight","lineClamp","lineHeight","order","orphans","strokeOpacity","widows","zIndex","zoom","blur","error","focus","load","resize","scroll","_linkedStates","callback","TodoModel","sub","todos","onChanges","inform","forEach","addTodo","title","concat","toggleAll","completed","map","todo","toggle","todoToToggle","_extends","destroy","filter","save","todoToSave","clearCompleted","TodoFooter","nowShowing","_ref","completedCount","onClearCompleted","class","href","onClick","ESCAPE_KEY","ENTER_KEY","TodoItem","handleSubmit","_this","onSave","_this$props","onDestroy","val","editText","trim","handleEdit","onEdit","_this$props2","_this$props3","onToggle","preventDefault","handleKeyDown","which","onCancel","handleDestroy","querySelector","_ref$todo","editing","_ref2","onDblClick","linkState","FILTERS","App","_Component","handleNewTodoKeyDown","keyCode","newTodo","model","edit","id","text","cancel","handleRoute","bind","location","hash","_ref2$nowShowing","ALL_TODOS","shownTodos","activeTodoCount","reduce","_this2","merge"],"mappings":"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","file":"app.js","sourcesContent":["/** Virtual DOM Node */\nexport function VNode(nodeName, attributes, children) {\n\t/** @type {string|function} */\n\tthis.nodeName = nodeName;\n\n\t/** @type {object<string>|undefined} */\n\tthis.attributes = attributes;\n\n\t/** @type {array<VNode>|undefined} */\n\tthis.children = children;\n\n\t/** Reference to the given key. */\n\tthis.key = attributes && attributes.key;\n}\n","import { VNode } from './vnode';\nimport options from './options';\n\n\nconst stack = [];\n\nconst EMPTY_CHILDREN = [];\n\n/** JSX/hyperscript reviver\n*\tBenchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\t@see http://jasonformat.com/wtf-is-jsx\n *\t@public\n *  @example\n *  /** @jsx h *\\/\n *  import { render, h } from 'preact';\n *  render(<span>foo</span>, document.body);\n */\nexport function h(nodeName, attributes) {\n\tlet children, lastSimple, child, simple, i;\n\tfor (i=arguments.length; i-- > 2; ) {\n\t\tstack.push(arguments[i]);\n\t}\n\tif (attributes && attributes.children) {\n\t\tif (!stack.length) stack.push(attributes.children);\n\t\tdelete attributes.children;\n\t}\n\twhile (stack.length) {\n\t\tif ((child = stack.pop()) instanceof Array) {\n\t\t\tfor (i=child.length; i--; ) stack.push(child[i]);\n\t\t}\n\t\telse if (child!=null && child!==true && child!==false) {\n\t\t\tif (typeof child=='number') child = String(child);\n\t\t\tsimple = typeof child=='string';\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length-1] += child;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t(children || (children = [])).push(child);\n\t\t\t\tlastSimple = simple;\n\t\t\t}\n\t\t}\n\t}\n\n\tlet p = new VNode(nodeName, attributes || undefined, children || EMPTY_CHILDREN);\n\n\t// if a \"vnode hook\" is defined, pass every created VNode to it\n\tif (options.vnode) options.vnode(p);\n\n\treturn p;\n}\n","/** Copy own-properties from `props` onto `obj`.\n *\t@returns obj\n *\t@private\n */\nexport function extend(obj, props) {\n\tif (props) {\n\t\tfor (let i in props) obj[i] = props[i];\n\t}\n\treturn obj;\n}\n\n\n/** Fast clone. Note: does not filter out non-own properties.\n *\t@see https://esbench.com/bench/56baa34f45df6895002e03b6\n */\nexport function clone(obj) {\n\treturn extend({}, obj);\n}\n\n\n/** Get a deep property value from the given object, expressed in dot-notation.\n *\t@private\n */\nexport function delve(obj, key) {\n\tfor (let p=key.split('.'), i=0; i<p.length && obj; i++) {\n\t\tobj = obj[p[i]];\n\t}\n\treturn obj;\n}\n\n\n/** @private is the given object a Function? */\nexport function isFunction(obj) {\n\treturn 'function'===typeof obj;\n}\n\n\n/** @private is the given object a String? */\nexport function isString(obj) {\n\treturn 'string'===typeof obj;\n}\n\n\n/** Convert a hashmap of CSS classes to a space-delimited className string\n *\t@private\n */\nexport function hashToClassName(c) {\n\tlet str = '';\n\tfor (let prop in c) {\n\t\tif (c[prop]) {\n\t\t\tif (str) str += ' ';\n\t\t\tstr += prop;\n\t\t}\n\t}\n\treturn str;\n}\n\n\n/** Just a memoized String#toLowerCase */\nlet lcCache = {};\nexport const toLowerCase = s => lcCache[s] || (lcCache[s] = s.toLowerCase());\n\n\n/** Call a function asynchronously, as soon as possible.\n *\t@param {Function} callback\n */\nlet resolved = typeof Promise!=='undefined' && Promise.resolve();\nexport const defer = resolved ? (f => { resolved.then(f); }) : setTimeout;\n","import { isString, delve } from './util';\n\n/** Create an Event handler function that sets a given state property.\n *\t@param {Component} component\tThe component whose state should be updated\n *\t@param {string} key\t\t\t\tA dot-notated key path to update in the component's state\n *\t@param {string} eventPath\t\tA dot-notated key path to the value that should be retrieved from the Event or component\n *\t@returns {function} linkedStateHandler\n *\t@private\n */\nexport function createLinkedState(component, key, eventPath) {\n\tlet path = key.split('.');\n\treturn function(e) {\n\t\tlet t = e && e.target || this,\n\t\t\tstate = {},\n\t\t\tobj = state,\n\t\t\tv = isString(eventPath) ? delve(e, eventPath) : t.nodeName ? (t.type.match(/^che|rad/) ? t.checked : t.value) : e,\n\t\t\ti = 0;\n\t\tfor ( ; i<path.length-1; i++) {\n\t\t\tobj = obj[path[i]] || (obj[path[i]] = !i && component.state[path[i]] || {});\n\t\t}\n\t\tobj[path[i]] = v;\n\t\tcomponent.setState(state);\n\t};\n}\n","import options from './options';\nimport { defer } from './util';\nimport { renderComponent } from './vdom/component';\n\n/** Managed queue of dirty components to be re-rendered */\n\nlet items = [];\n\nexport function enqueueRender(component) {\n\tif (!component._dirty && (component._dirty = true) && items.push(component)==1) {\n\t\t(options.debounceRendering || defer)(rerender);\n\t}\n}\n\n\nexport function rerender() {\n\tlet p, list = items;\n\titems = [];\n\twhile ( (p = list.pop()) ) {\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n","import { EMPTY } from '../constants';\nimport { getNodeProps } from './index';\nimport { isFunction } from '../util';\n\n\n/** Check if a VNode is a reference to a stateless functional component.\n *\tA function component is represented as a VNode whose `nodeName` property is a reference to a function.\n *\tIf that function is not a Component (ie, has no `.render()` method on a prototype), it is considered a stateless functional component.\n *\t@param {VNode} vnode\tA VNode\n *\t@private\n */\nexport function isFunctionalComponent(vnode) {\n\tlet nodeName = vnode && vnode.nodeName;\n\treturn nodeName && isFunction(nodeName) && !(nodeName.prototype && nodeName.prototype.render);\n}\n\n\n\n/** Construct a resultant VNode from a VNode referencing a stateless functional component.\n *\t@param {VNode} vnode\tA VNode with a `nodeName` property that is a reference to a function.\n *\t@private\n */\nexport function buildFunctionalComponent(vnode, context) {\n\treturn vnode.nodeName(getNodeProps(vnode), context || EMPTY);\n}\n","import { clone, isString, isFunction, toLowerCase } from '../util';\nimport { isFunctionalComponent } from './functional-component';\n\n\n/** Check if two nodes are equivalent.\n *\t@param {Element} node\n *\t@param {VNode} vnode\n *\t@private\n */\nexport function isSameNodeType(node, vnode) {\n\tif (isString(vnode)) {\n\t\treturn node instanceof Text;\n\t}\n\tif (isString(vnode.nodeName)) {\n\t\treturn !node._componentConstructor && isNamedNode(node, vnode.nodeName);\n\t}\n\tif (isFunction(vnode.nodeName)) {\n\t\treturn (node._componentConstructor ? node._componentConstructor===vnode.nodeName : true) || isFunctionalComponent(vnode);\n\t}\n}\n\n\nexport function isNamedNode(node, nodeName) {\n\treturn node.normalizedNodeName===nodeName || toLowerCase(node.nodeName)===toLowerCase(nodeName);\n}\n\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n * @param {VNode} vnode\n * @returns {Object} props\n */\nexport function getNodeProps(vnode) {\n\tlet props = clone(vnode.attributes);\n\tprops.children = vnode.children;\n\n\tlet defaultProps = vnode.nodeName.defaultProps;\n\tif (defaultProps) {\n\t\tfor (let i in defaultProps) {\n\t\t\tif (props[i]===undefined) {\n\t\t\t\tprops[i] = defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn props;\n}\n","import { NON_DIMENSION_PROPS, NON_BUBBLING_EVENTS } from '../constants';\nimport options from '../options';\nimport { toLowerCase, isString, isFunction, hashToClassName } from '../util';\n\n\n\n\n/** Removes a given DOM Node from its parent. */\nexport function removeNode(node) {\n\tlet p = node.parentNode;\n\tif (p) p.removeChild(node);\n}\n\n\n/** Set a named attribute on the given Node, with special behavior for some names and event handlers.\n *\tIf `value` is `null`, the attribute/handler will be removed.\n *\t@param {Element} node\tAn element to mutate\n *\t@param {string} name\tThe name/key to set, such as an event or attribute name\n *\t@param {any} old\tThe last value that was set for this name/node pair\n *\t@param {any} value\tAn attribute value, such as a function to be used as an event handler\n *\t@param {Boolean} isSvg\tAre we currently diffing inside an svg?\n *\t@private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n\n\tif (name==='className') name = 'class';\n\n\tif (name==='class' && value && typeof value==='object') {\n\t\tvalue = hashToClassName(value);\n\t}\n\n\tif (name==='key') {\n\t\t// ignore\n\t}\n\telse if (name==='class' && !isSvg) {\n\t\tnode.className = value || '';\n\t}\n\telse if (name==='style') {\n\t\tif (!value || isString(value) || isString(old)) {\n\t\t\tnode.style.cssText = value || '';\n\t\t}\n\t\tif (value && typeof value==='object') {\n\t\t\tif (!isString(old)) {\n\t\t\t\tfor (let i in old) if (!(i in value)) node.style[i] = '';\n\t\t\t}\n\t\t\tfor (let i in value) {\n\t\t\t\tnode.style[i] = typeof value[i]==='number' && !NON_DIMENSION_PROPS[i] ? (value[i]+'px') : value[i];\n\t\t\t}\n\t\t}\n\t}\n\telse if (name==='dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html || '';\n\t}\n\telse if (name[0]=='o' && name[1]=='n') {\n\t\tlet l = node._listeners || (node._listeners = {});\n\t\tname = toLowerCase(name.substring(2));\n\t\t// @TODO: this might be worth it later, un-breaks focus/blur bubbling in IE9:\n\t\t// if (node.attachEvent) name = name=='focus'?'focusin':name=='blur'?'focusout':name;\n\t\tif (value) {\n\t\t\tif (!l[name]) node.addEventListener(name, eventProxy, !!NON_BUBBLING_EVENTS[name]);\n\t\t}\n\t\telse if (l[name]) {\n\t\t\tnode.removeEventListener(name, eventProxy, !!NON_BUBBLING_EVENTS[name]);\n\t\t}\n\t\tl[name] = value;\n\t}\n\telse if (name!=='list' && name!=='type' && !isSvg && name in node) {\n\t\tsetProperty(node, name, value==null ? '' : value);\n\t\tif (value==null || value===false) node.removeAttribute(name);\n\t}\n\telse {\n\t\tlet ns = isSvg && name.match(/^xlink\\:?(.+)/);\n\t\tif (value==null || value===false) {\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', toLowerCase(ns[1]));\n\t\t\telse node.removeAttribute(name);\n\t\t}\n\t\telse if (typeof value!=='object' && !isFunction(value)) {\n\t\t\tif (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', toLowerCase(ns[1]), value);\n\t\t\telse node.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n\n/** Attempt to set a DOM property to the given value.\n *\tIE & FF throw for certain property-value combinations.\n */\nfunction setProperty(node, name, value) {\n\ttry {\n\t\tnode[name] = value;\n\t} catch (e) { }\n}\n\n\n/** Proxy an event to hooked event handlers\n *\t@private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event && options.event(e) || e);\n}\n","import { toLowerCase } from '../util';\nimport { removeNode } from './index';\n\n/** DOM node pool, keyed on nodeName. */\n\nconst nodes = {};\n\nexport function collectNode(node) {\n\tremoveNode(node);\n\n\tif (node instanceof Element) {\n\t\tnode._component = node._componentConstructor = null;\n\n\t\tlet name = node.normalizedNodeName || toLowerCase(node.nodeName);\n\t\t(nodes[name] || (nodes[name] = [])).push(node);\n\t}\n}\n\n\nexport function createNode(nodeName, isSvg) {\n\tlet name = toLowerCase(nodeName),\n\t\tnode = nodes[name] && nodes[name].pop() || (isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName));\n\tnode.normalizedNodeName = name;\n\treturn node;\n}\n","import { ATTR_KEY } from '../constants';\nimport { isString, isFunction } from '../util';\nimport { isSameNodeType, isNamedNode } from './index';\nimport { isFunctionalComponent, buildFunctionalComponent } from './functional-component';\nimport { buildComponentFromVNode } from './component';\nimport { setAccessor, removeNode } from '../dom/index';\nimport { createNode, collectNode } from '../dom/recycler';\nimport { unmountComponent } from './component';\nimport options from '../options';\n\n\n/** Queue of components that have been mounted and are awaiting componentDidMount */\nexport const mounts = [];\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0;\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false;\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false;\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n\tlet c;\n\twhile ((c=mounts.pop())) {\n\t\tif (options.afterMount) options.afterMount(c);\n\t\tif (c.componentDidMount) c.componentDidMount();\n\t}\n}\n\n\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\n *\t@returns {Element} dom\t\t\tThe created/mutated element\n *\t@private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n\t// diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n\tif (!diffLevel++) {\n\t\t// when first starting the diff, check if we're diffing an SVG or within an SVG\n\t\tisSvgMode = parent && typeof parent.ownerSVGElement!=='undefined';\n\n\t\t// hydration is inidicated by the existing element to be diffed not having a prop cache\n\t\thydrating = dom && !(ATTR_KEY in dom);\n\t}\n\n\tlet ret = idiff(dom, vnode, context, mountAll);\n\n\t// append the element if its a new parent\n\tif (parent && ret.parentNode!==parent) parent.appendChild(ret);\n\n\t// diffLevel being reduced to 0 means we're exiting the diff\n\tif (!--diffLevel) {\n\t\thydrating = false;\n\t\t// invoke queued componentDidMount lifecycle methods\n\t\tif (!componentRoot) flushMounts();\n\t}\n\n\treturn ret;\n}\n\n\nfunction idiff(dom, vnode, context, mountAll) {\n\tlet ref = vnode && vnode.attributes && vnode.attributes.ref;\n\n\n\t// Resolve ephemeral Pure Functional Components\n\twhile (isFunctionalComponent(vnode)) {\n\t\tvnode = buildFunctionalComponent(vnode, context);\n\t}\n\n\n\t// empty values (null & undefined) render as empty Text nodes\n\tif (vnode==null) vnode = '';\n\n\n\t// Fast case: Strings create/update Text nodes.\n\tif (isString(vnode)) {\n\t\t// update if it's already a Text node\n\t\tif (dom && dom instanceof Text && dom.parentNode) {\n\t\t\tif (dom.nodeValue!=vnode) {\n\t\t\t\tdom.nodeValue = vnode;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// it wasn't a Text node: replace it with one and recycle the old Element\n\t\t\tif (dom) recollectNodeTree(dom);\n\t\t\tdom = document.createTextNode(vnode);\n\t\t}\n\n\t\treturn dom;\n\t}\n\n\n\t// If the VNode represents a Component, perform a component diff.\n\tif (isFunction(vnode.nodeName)) {\n\t\treturn buildComponentFromVNode(dom, vnode, context, mountAll);\n\t}\n\n\n\tlet out = dom,\n\t\tnodeName = String(vnode.nodeName),\t// @TODO this masks undefined component errors as `<undefined>`\n\t\tprevSvgMode = isSvgMode,\n\t\tvchildren = vnode.children;\n\n\n\t// SVGs have special namespace stuff.\n\t// This tracks entering and exiting that namespace when descending through the tree.\n\tisSvgMode = nodeName==='svg' ? true : nodeName==='foreignObject' ? false : isSvgMode;\n\n\n\tif (!dom) {\n\t\t// case: we had no element to begin with\n\t\t// - create an element with the nodeName from VNode\n\t\tout = createNode(nodeName, isSvgMode);\n\t}\n\telse if (!isNamedNode(dom, nodeName)) {\n\t\t// case: Element and VNode had different nodeNames\n\t\t// - need to create the correct Element to match VNode\n\t\t// - then migrate children from old to new\n\n\t\tout = createNode(nodeName, isSvgMode);\n\n\t\t// move children into the replacement node\n\t\twhile (dom.firstChild) out.appendChild(dom.firstChild);\n\n\t\t// if the previous Element was mounted into the DOM, replace it inline\n\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\n\t\t// recycle the old element (skips non-Element node types)\n\t\trecollectNodeTree(dom);\n\t}\n\n\n\tlet fc = out.firstChild,\n\t\tprops = out[ATTR_KEY];\n\n\t// Attribute Hydration: if there is no prop cache on the element,\n\t// ...create it and populate it with the element's attributes.\n\tif (!props) {\n\t\tout[ATTR_KEY] = props = {};\n\t\tfor (let a=out.attributes, i=a.length; i--; ) props[a[i].name] = a[i].value;\n\t}\n\n\t// Optimization: fast-path for elements containing a single TextNode:\n\tif (!hydrating && vchildren && vchildren.length===1 && typeof vchildren[0]==='string' && fc && fc instanceof Text && !fc.nextSibling) {\n\t\tif (fc.nodeValue!=vchildren[0]) {\n\t\t\tfc.nodeValue = vchildren[0];\n\t\t}\n\t}\n\t// otherwise, if there are existing or new children, diff them:\n\telse if (vchildren && vchildren.length || fc) {\n\t\tinnerDiffNode(out, vchildren, context, mountAll, !!props.dangerouslySetInnerHTML);\n\t}\n\n\n\t// Apply attributes/props from VNode to the DOM Element:\n\tdiffAttributes(out, vnode.attributes, props);\n\n\n\t// invoke original ref (from before resolving Pure Functional Components):\n\tif (ref) {\n\t\t(props.ref = ref)(out);\n\t}\n\n\tisSvgMode = prevSvgMode;\n\n\treturn out;\n}\n\n\n/** Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n *\t@param {Element} dom\t\tElement whose children should be compared & mutated\n *\t@param {Array} vchildren\tArray of VNodes to compare to `dom.childNodes`\n *\t@param {Object} context\t\tImplicitly descendant context object (from most recent `getChildContext()`)\n *\t@param {Boolean} mountAll\n *\t@param {Boolean} absorb\t\tIf `true`, consumes externally created elements similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, absorb) {\n\tlet originalChildren = dom.childNodes,\n\t\tchildren = [],\n\t\tkeyed = {},\n\t\tkeyedLen = 0,\n\t\tmin = 0,\n\t\tlen = originalChildren.length,\n\t\tchildrenLen = 0,\n\t\tvlen = vchildren && vchildren.length,\n\t\tj, c, vchild, child;\n\n\tif (len) {\n\t\tfor (let i=0; i<len; i++) {\n\t\t\tlet child = originalChildren[i],\n\t\t\t\tprops = child[ATTR_KEY],\n\t\t\t\tkey = vlen ? ((c = child._component) ? c.__key : props ? props.key : null) : null;\n\t\t\tif (key!=null) {\n\t\t\t\tkeyedLen++;\n\t\t\t\tkeyed[key] = child;\n\t\t\t}\n\t\t\telse if (hydrating || absorb || props || child instanceof Text) {\n\t\t\t\tchildren[childrenLen++] = child;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen) {\n\t\tfor (let i=0; i<vlen; i++) {\n\t\t\tvchild = vchildren[i];\n\t\t\tchild = null;\n\n\t\t\t// if (isFunctionalComponent(vchild)) {\n\t\t\t// \tvchild = buildFunctionalComponent(vchild);\n\t\t\t// }\n\n\t\t\t// attempt to find a node based on key matching\n\t\t\tlet key = vchild.key;\n\t\t\tif (key!=null) {\n\t\t\t\tif (keyedLen && key in keyed) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = undefined;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\telse if (!child && min<childrenLen) {\n\t\t\t\tfor (j=min; j<childrenLen; j++) {\n\t\t\t\t\tc = children[j];\n\t\t\t\t\tif (c && isSameNodeType(c, vchild)) {\n\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\tchildren[j] = undefined;\n\t\t\t\t\t\tif (j===childrenLen-1) childrenLen--;\n\t\t\t\t\t\tif (j===min) min++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tchild = idiff(child, vchild, context, mountAll);\n\n\t\t\tif (child && child!==dom) {\n\t\t\t\tif (i>=len) {\n\t\t\t\t\tdom.appendChild(child);\n\t\t\t\t}\n\t\t\t\telse if (child!==originalChildren[i]) {\n\t\t\t\t\tif (child===originalChildren[i+1]) {\n\t\t\t\t\t\tremoveNode(originalChildren[i]);\n\t\t\t\t\t}\n\t\t\t\t\tdom.insertBefore(child, originalChildren[i] || null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tif (keyedLen) {\n\t\tfor (let i in keyed) if (keyed[i]) recollectNodeTree(keyed[i]);\n\t}\n\n\t// remove orphaned children\n\twhile (min<=childrenLen) {\n\t\tchild = children[childrenLen--];\n\t\tif (child) recollectNodeTree(child);\n\t}\n}\n\n\n\n/** Recursively recycle (or just unmount) a node an its descendants.\n *\t@param {Node} node\t\t\t\t\t\tDOM node to start unmount/removal from\n *\t@param {Boolean} [unmountOnly=false]\tIf `true`, only triggers unmount lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n\tlet component = node._component;\n\tif (component) {\n\t\t// if node is owned by a Component, unmount that component (ends up recursing back here)\n\t\tunmountComponent(component, !unmountOnly);\n\t}\n\telse {\n\t\t// If the node's VNode had a ref function, invoke it with null here.\n\t\t// (this is part of the React spec, and smart for unsetting references)\n\t\tif (node[ATTR_KEY] && node[ATTR_KEY].ref) node[ATTR_KEY].ref(null);\n\n\t\tif (!unmountOnly) {\n\t\t\tcollectNode(node);\n\t\t}\n\n\t\t// Recollect/unmount all children.\n\t\t// - we use .lastChild here because it causes less reflow than .firstChild\n\t\t// - it's also cheaper than accessing the .childNodes Live NodeList\n\t\tlet c;\n\t\twhile ((c=node.lastChild)) recollectNodeTree(c, unmountOnly);\n\t}\n}\n\n\n\n/** Apply differences in attributes from a VNode to the given DOM Element.\n *\t@param {Element} dom\t\tElement with attributes to diff `attrs` against\n *\t@param {Object} attrs\t\tThe desired end-state key-value attribute pairs\n *\t@param {Object} old\t\t\tCurrent/previous attributes (from previous VNode or element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n\t// remove attributes no longer present on the vnode by setting them to undefined\n\tlet name;\n\tfor (name in old) {\n\t\tif (!(attrs && name in attrs) && old[name]!=null) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);\n\t\t}\n\t}\n\n\t// add new & update changed attributes\n\tif (attrs) {\n\t\tfor (name in attrs) {\n\t\t\tif (name!=='children' && name!=='innerHTML' && (!(name in old) || attrs[name]!==(name==='value' || name==='checked' ? dom[name] : old[name]))) {\n\t\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);\n\t\t\t}\n\t\t}\n\t}\n}\n","import { Component } from '../component';\n\n/** Retains a pool of Components for re-use, keyed on component name.\n *\tNote: since component names are not unique or even necessarily available, these are primarily a form of sharding.\n *\t@private\n */\nconst components = {};\n\n\nexport function collectComponent(component) {\n\tlet name = component.constructor.name,\n\t\tlist = components[name];\n\tif (list) list.push(component);\n\telse components[name] = [component];\n}\n\n\nexport function createComponent(Ctor, props, context) {\n\tlet inst = new Ctor(props, context),\n\t\tlist = components[Ctor.name];\n\tComponent.call(inst, props, context);\n\tif (list) {\n\t\tfor (let i=list.length; i--; ) {\n\t\t\tif (list[i].constructor===Ctor) {\n\t\t\t\tinst.nextBase = list[i].nextBase;\n\t\t\t\tlist.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn inst;\n}\n","import { SYNC_RENDER, NO_RENDER, FORCE_RENDER, ASYNC_RENDER, ATTR_KEY } from '../constants';\nimport options from '../options';\nimport { isFunction, clone, extend } from '../util';\nimport { enqueueRender } from '../render-queue';\nimport { getNodeProps } from './index';\nimport { diff, mounts, diffLevel, flushMounts, recollectNodeTree } from './diff';\nimport { isFunctionalComponent, buildFunctionalComponent } from './functional-component';\nimport { createComponent, collectComponent } from './component-recycler';\nimport { removeNode } from '../dom/index';\n\n\n\n/** Set a component's `props` (generally derived from JSX attributes).\n *\t@param {Object} props\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.renderSync=false]\tIf `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.\n *\t@param {boolean} [opts.render=true]\t\t\tIf `false`, no render will be triggered.\n */\nexport function setComponentProps(component, props, opts, context, mountAll) {\n\tif (component._disable) return;\n\tcomponent._disable = true;\n\n\tif ((component.__ref = props.ref)) delete props.ref;\n\tif ((component.__key = props.key)) delete props.key;\n\n\tif (!component.base || mountAll) {\n\t\tif (component.componentWillMount) component.componentWillMount();\n\t}\n\telse if (component.componentWillReceiveProps) {\n\t\tcomponent.componentWillReceiveProps(props, context);\n\t}\n\n\tif (context && context!==component.context) {\n\t\tif (!component.prevContext) component.prevContext = component.context;\n\t\tcomponent.context = context;\n\t}\n\n\tif (!component.prevProps) component.prevProps = component.props;\n\tcomponent.props = props;\n\n\tcomponent._disable = false;\n\n\tif (opts!==NO_RENDER) {\n\t\tif (opts===SYNC_RENDER || options.syncComponentUpdates!==false || !component.base) {\n\t\t\trenderComponent(component, SYNC_RENDER, mountAll);\n\t\t}\n\t\telse {\n\t\t\tenqueueRender(component);\n\t\t}\n\t}\n\n\tif (component.__ref) component.__ref(component);\n}\n\n\n\n/** Render a Component, triggering necessary lifecycle events and taking High-Order Components into account.\n *\t@param {Component} component\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.build=false]\t\tIf `true`, component will build and store a DOM node if not already associated with one.\n *\t@private\n */\nexport function renderComponent(component, opts, mountAll, isChild) {\n\tif (component._disable) return;\n\n\tlet skip, rendered,\n\t\tprops = component.props,\n\t\tstate = component.state,\n\t\tcontext = component.context,\n\t\tpreviousProps = component.prevProps || props,\n\t\tpreviousState = component.prevState || state,\n\t\tpreviousContext = component.prevContext || context,\n\t\tisUpdate = component.base,\n\t\tnextBase = component.nextBase,\n\t\tinitialBase = isUpdate || nextBase,\n\t\tinitialChildComponent = component._component,\n\t\tinst, cbase;\n\n\t// if updating\n\tif (isUpdate) {\n\t\tcomponent.props = previousProps;\n\t\tcomponent.state = previousState;\n\t\tcomponent.context = previousContext;\n\t\tif (opts!==FORCE_RENDER\n\t\t\t&& component.shouldComponentUpdate\n\t\t\t&& component.shouldComponentUpdate(props, state, context) === false) {\n\t\t\tskip = true;\n\t\t}\n\t\telse if (component.componentWillUpdate) {\n\t\t\tcomponent.componentWillUpdate(props, state, context);\n\t\t}\n\t\tcomponent.props = props;\n\t\tcomponent.state = state;\n\t\tcomponent.context = context;\n\t}\n\n\tcomponent.prevProps = component.prevState = component.prevContext = component.nextBase = null;\n\tcomponent._dirty = false;\n\n\tif (!skip) {\n\t\tif (component.render) rendered = component.render(props, state, context);\n\n\t\t// context to pass to the child, can be updated via (grand-)parent component\n\t\tif (component.getChildContext) {\n\t\t\tcontext = extend(clone(context), component.getChildContext());\n\t\t}\n\n\t\twhile (isFunctionalComponent(rendered)) {\n\t\t\trendered = buildFunctionalComponent(rendered, context);\n\t\t}\n\n\t\tlet childComponent = rendered && rendered.nodeName,\n\t\t\ttoUnmount, base;\n\n\t\tif (isFunction(childComponent)) {\n\t\t\t// set up high order component link\n\n\t\t\tlet childProps = getNodeProps(rendered);\n\t\t\tinst = initialChildComponent;\n\n\t\t\tif (inst && inst.constructor===childComponent && childProps.key==inst.__key) {\n\t\t\t\tsetComponentProps(inst, childProps, SYNC_RENDER, context);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttoUnmount = inst;\n\n\t\t\t\tinst = createComponent(childComponent, childProps, context);\n\t\t\t\tinst.nextBase = inst.nextBase || nextBase;\n\t\t\t\tinst._parentComponent = component;\n\t\t\t\tcomponent._component = inst;\n\t\t\t\tsetComponentProps(inst, childProps, NO_RENDER, context);\n\t\t\t\trenderComponent(inst, SYNC_RENDER, mountAll, true);\n\t\t\t}\n\n\t\t\tbase = inst.base;\n\t\t}\n\t\telse {\n\t\t\tcbase = initialBase;\n\n\t\t\t// destroy high order component link\n\t\t\ttoUnmount = initialChildComponent;\n\t\t\tif (toUnmount) {\n\t\t\t\tcbase = component._component = null;\n\t\t\t}\n\n\t\t\tif (initialBase || opts===SYNC_RENDER) {\n\t\t\t\tif (cbase) cbase._component = null;\n\t\t\t\tbase = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);\n\t\t\t}\n\t\t}\n\n\t\tif (initialBase && base!==initialBase && inst!==initialChildComponent) {\n\t\t\tlet baseParent = initialBase.parentNode;\n\t\t\tif (baseParent && base!==baseParent) {\n\t\t\t\tbaseParent.replaceChild(base, initialBase);\n\n\t\t\t\tif (!toUnmount) {\n\t\t\t\t\tinitialBase._component = null;\n\t\t\t\t\trecollectNodeTree(initialBase);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (toUnmount) {\n\t\t\tunmountComponent(toUnmount, base!==initialBase);\n\t\t}\n\n\t\tcomponent.base = base;\n\t\tif (base && !isChild) {\n\t\t\tlet componentRef = component,\n\t\t\t\tt = component;\n\t\t\twhile ((t=t._parentComponent)) {\n\t\t\t\t(componentRef = t).base = base;\n\t\t\t}\n\t\t\tbase._component = componentRef;\n\t\t\tbase._componentConstructor = componentRef.constructor;\n\t\t}\n\t}\n\n\tif (!isUpdate || mountAll) {\n\t\tmounts.unshift(component);\n\t}\n\telse if (!skip) {\n\t\tif (component.componentDidUpdate) {\n\t\t\tcomponent.componentDidUpdate(previousProps, previousState, previousContext);\n\t\t}\n\t\tif (options.afterUpdate) options.afterUpdate(component);\n\t}\n\n\tlet cb = component._renderCallbacks, fn;\n\tif (cb) while ( (fn = cb.pop()) ) fn.call(component);\n\n\tif (!diffLevel && !isChild) flushMounts();\n}\n\n\n\n/** Apply the Component referenced by a VNode to the DOM.\n *\t@param {Element} dom\tThe DOM node to mutate\n *\t@param {VNode} vnode\tA Component-referencing VNode\n *\t@returns {Element} dom\tThe created/mutated element\n *\t@private\n */\nexport function buildComponentFromVNode(dom, vnode, context, mountAll) {\n\tlet c = dom && dom._component,\n\t\toriginalComponent = c,\n\t\toldDom = dom,\n\t\tisDirectOwner = c && dom._componentConstructor===vnode.nodeName,\n\t\tisOwner = isDirectOwner,\n\t\tprops = getNodeProps(vnode);\n\twhile (c && !isOwner && (c=c._parentComponent)) {\n\t\tisOwner = c.constructor===vnode.nodeName;\n\t}\n\n\tif (c && isOwner && (!mountAll || c._component)) {\n\t\tsetComponentProps(c, props, ASYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\t}\n\telse {\n\t\tif (originalComponent && !isDirectOwner) {\n\t\t\tunmountComponent(originalComponent, true);\n\t\t\tdom = oldDom = null;\n\t\t}\n\n\t\tc = createComponent(vnode.nodeName, props, context);\n\t\tif (dom && !c.nextBase) {\n\t\t\tc.nextBase = dom;\n\t\t\t// passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L241:\n\t\t\toldDom = null;\n\t\t}\n\t\tsetComponentProps(c, props, SYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\n\t\tif (oldDom && dom!==oldDom) {\n\t\t\toldDom._component = null;\n\t\t\trecollectNodeTree(oldDom);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n\n\n/** Remove a component from the DOM and recycle it.\n *\t@param {Element} dom\t\t\tA DOM node from which to unmount the given Component\n *\t@param {Component} component\tThe Component instance to unmount\n *\t@private\n */\nexport function unmountComponent(component, remove) {\n\tif (options.beforeUnmount) options.beforeUnmount(component);\n\n\t// console.log(`${remove?'Removing':'Unmounting'} component: ${component.constructor.name}`);\n\tlet base = component.base;\n\n\tcomponent._disable = true;\n\n\tif (component.componentWillUnmount) component.componentWillUnmount();\n\n\tcomponent.base = null;\n\n\t// recursively tear down & recollect high-order component children:\n\tlet inner = component._component;\n\tif (inner) {\n\t\tunmountComponent(inner, remove);\n\t}\n\telse if (base) {\n\t\tif (base[ATTR_KEY] && base[ATTR_KEY].ref) base[ATTR_KEY].ref(null);\n\n\t\tcomponent.nextBase = base;\n\n\t\tif (remove) {\n\t\t\tremoveNode(base);\n\t\t\tcollectComponent(component);\n\t\t}\n\t\tlet c;\n\t\twhile ((c=base.lastChild)) recollectNodeTree(c, !remove);\n\t\t// removeOrphanedChildren(base.childNodes, true);\n\t}\n\n\tif (component.__ref) component.__ref(null);\n\tif (component.componentDidUnmount) component.componentDidUnmount();\n}\n","import { FORCE_RENDER } from './constants';\nimport { extend, clone, isFunction } from './util';\nimport { createLinkedState } from './linked-state';\nimport { renderComponent } from './vdom/component';\nimport { enqueueRender } from './render-queue';\n\n/** Base Component class, for the ES6 Class method of creating Components\n *\t@public\n *\n *\t@example\n *\tclass MyFoo extends Component {\n *\t\trender(props, state) {\n *\t\t\treturn <div />;\n *\t\t}\n *\t}\n */\nexport function Component(props, context) {\n\t/** @private */\n\tthis._dirty = true;\n\t// /** @public */\n\t// this._disableRendering = false;\n\t// /** @public */\n\t// this.prevState = this.prevProps = this.prevContext = this.base = this.nextBase = this._parentComponent = this._component = this.__ref = this.__key = this._linkedStates = this._renderCallbacks = null;\n\t/** @public */\n\tthis.context = context;\n\t/** @type {object} */\n\tthis.props = props;\n\t/** @type {object} */\n\tif (!this.state) this.state = {};\n}\n\n\nextend(Component.prototype, {\n\n\t/** Returns a `boolean` value indicating if the component should re-render when receiving the given `props` and `state`.\n\t *\t@param {object} nextProps\n\t *\t@param {object} nextState\n\t *\t@param {object} nextContext\n\t *\t@returns {Boolean} should the component re-render\n\t *\t@name shouldComponentUpdate\n\t *\t@function\n\t */\n\t// shouldComponentUpdate() {\n\t// \treturn true;\n\t// },\n\n\n\t/** Returns a function that sets a state property when called.\n\t *\tCalling linkState() repeatedly with the same arguments returns a cached link function.\n\t *\n\t *\tProvides some built-in special cases:\n\t *\t\t- Checkboxes and radio buttons link their boolean `checked` value\n\t *\t\t- Inputs automatically link their `value` property\n\t *\t\t- Event paths fall back to any associated Component if not found on an element\n\t *\t\t- If linked value is a function, will invoke it and use the result\n\t *\n\t *\t@param {string} key\t\tThe path to set - can be a dot-notated deep key\n\t *\t@param {string} [eventPath]\tIf set, attempts to find the new state value at a given dot-notated path within the object passed to the linkedState setter.\n\t *\t@returns {function} linkStateSetter(e)\n\t *\n\t *\t@example Update a \"text\" state value when an input changes:\n\t *\t\t<input onChange={ this.linkState('text') } />\n\t *\n\t *\t@example Set a deep state value on click\n\t *\t\t<button onClick={ this.linkState('touch.coords', 'touches.0') }>Tap</button\n\t */\n\tlinkState(key, eventPath) {\n\t\tlet c = this._linkedStates || (this._linkedStates = {});\n\t\treturn c[key+eventPath] || (c[key+eventPath] = createLinkedState(this, key, eventPath));\n\t},\n\n\n\t/** Update component state by copying properties from `state` to `this.state`.\n\t *\t@param {object} state\t\tA hash of state properties to update with new values\n\t */\n\tsetState(state, callback) {\n\t\tlet s = this.state;\n\t\tif (!this.prevState) this.prevState = clone(s);\n\t\textend(s, isFunction(state) ? state(s, this.props) : state);\n\t\tif (callback) (this._renderCallbacks = (this._renderCallbacks || [])).push(callback);\n\t\tenqueueRender(this);\n\t},\n\n\n\t/** Immediately perform a synchronous re-render of the component.\n\t *\t@private\n\t */\n\tforceUpdate() {\n\t\trenderComponent(this, FORCE_RENDER);\n\t},\n\n\n\t/** Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n\t *\tVirtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n\t *\t@param {object} props\t\tProps (eg: JSX attributes) received from parent element/component\n\t *\t@param {object} state\t\tThe component's current state\n\t *\t@param {object} context\t\tContext object (if a parent component has provided context)\n\t *\t@returns VNode\n\t */\n\trender() {}\n\n});\n","export function uuid() {\r\n\tlet uuid = '';\r\n\tfor (let i=0; i<32; i++) {\r\n\t\tlet random = Math.random() * 16 | 0;\r\n\t\tif (i === 8 || i === 12 || i === 16 || i === 20) {\r\n\t\t\tuuid += '-';\r\n\t\t}\r\n\t\tuuid += (i === 12 ? 4 : (i === 16 ? (random & 3 | 8) : random)).toString(16);\r\n\t}\r\n\treturn uuid;\r\n}\r\n\r\nexport function pluralize(count, word) {\r\n\treturn count === 1 ? word : word + 's';\r\n}\r\n\r\nexport function store(namespace, data) {\r\n\tif (data) return localStorage[namespace] = JSON.stringify(data);\r\n\r\n\tlet store = localStorage[namespace];\r\n\treturn store && JSON.parse(store) || [];\r\n}\r\n","/** Global options\n *\t@public\n *\t@namespace options {Object}\n */\nexport default {\n\n\t/** If `true`, `prop` changes trigger synchronous component updates.\n\t *\t@name syncComponentUpdates\n\t *\t@type Boolean\n\t *\t@default true\n\t */\n\t//syncComponentUpdates: true,\n\n\t/** Processes all created VNodes.\n\t *\t@param {VNode} vnode\tA newly-created VNode to normalize/process\n\t */\n\t//vnode(vnode) { }\n\n\t/** Hook invoked after a component is mounted. */\n\t// afterMount(component) { }\n\n\t/** Hook invoked after the DOM is updated with a component's latest render. */\n\t// afterUpdate(component) { }\n\n\t/** Hook invoked immediately before a component is unmounted. */\n\t// beforeUnmount(component) { }\n};\n","// render modes\n\nexport const NO_RENDER = 0;\nexport const SYNC_RENDER = 1;\nexport const FORCE_RENDER = 2;\nexport const ASYNC_RENDER = 3;\n\nexport const EMPTY = {};\n\nexport const ATTR_KEY = typeof Symbol!=='undefined' ? Symbol.for('preactattr') : '__preactattr_';\n\n// DOM properties that should NOT have \"px\" added when numeric\nexport const NON_DIMENSION_PROPS = {\n\tboxFlex:1, boxFlexGroup:1, columnCount:1, fillOpacity:1, flex:1, flexGrow:1,\n\tflexPositive:1, flexShrink:1, flexNegative:1, fontWeight:1, lineClamp:1, lineHeight:1,\n\topacity:1, order:1, orphans:1, strokeOpacity:1, widows:1, zIndex:1, zoom:1\n};\n\n// DOM event types that do not bubble and should be attached via useCapture\nexport const NON_BUBBLING_EVENTS = { blur:1, error:1, focus:1, load:1, resize:1, scroll:1 };\n","import { uuid, store } from './util';\r\n\r\nexport default class TodoModel {\r\n\tconstructor(key, sub) {\r\n\t\tthis.key = key;\r\n\t\tthis.todos = /*store(key) || */[];\r\n\t\tthis.onChanges = [sub];\r\n\t}\r\n\r\n\tinform() {\r\n\t\t// store(this.key, this.todos);\r\n\t\tthis.onChanges.forEach( cb => cb() );\r\n\t}\r\n\r\n\taddTodo(title) {\r\n\t\tthis.todos = this.todos.concat({\r\n\t\t\tid: uuid(),\r\n\t\t\ttitle,\r\n\t\t\tcompleted: false\r\n\t\t});\r\n\t\tthis.inform();\r\n\t}\r\n\r\n\ttoggleAll(completed) {\r\n\t\tthis.todos = this.todos.map(\r\n\t\t\ttodo => ({ ...todo, completed })\r\n\t\t);\r\n\t\tthis.inform();\r\n\t}\r\n\r\n\ttoggle(todoToToggle) {\r\n\t\tthis.todos = this.todos.map( todo => (\r\n\t\t\ttodo !== todoToToggle ? todo : ({ ...todo, completed: !todo.completed })\r\n\t\t) );\r\n\t\tthis.inform();\r\n\t}\r\n\r\n\tdestroy(todo) {\r\n\t\tthis.todos = this.todos.filter( t => t !== todo );\r\n\t\tthis.inform();\r\n\t}\r\n\r\n\tsave(todoToSave, title) {\r\n\t\tthis.todos = this.todos.map( todo => (\r\n\t\t\ttodo !== todoToSave ? todo : ({ ...todo, title })\r\n\t\t));\r\n\t\tthis.inform();\r\n\t}\r\n\r\n\tclearCompleted() {\r\n\t\tthis.todos = this.todos.filter( todo => !todo.completed );\r\n\t\tthis.inform();\r\n\t}\r\n}\r\n","import { h, Component } from 'preact';\r\nimport { pluralize } from './util';\r\n\r\nexport default class TodoFooter extends Component {\r\n\trender({ nowShowing, count, completedCount, onClearCompleted }) {\r\n\t\treturn (\r\n\t\t\t<footer class=\"footer\">\r\n\t\t\t\t<span class=\"todo-count\">\r\n\t\t\t\t\t<strong>{count}</strong> {pluralize(count, 'item')} left\r\n\t\t\t\t</span>\r\n\t\t\t\t<ul class=\"filters\">\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a href=\"#/\" class={nowShowing=='all' && 'selected'}>All</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a href=\"#/active\" class={nowShowing=='active' && 'selected'}>Active</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a href=\"#/completed\" class={nowShowing=='completed' && 'selected'}>Completed</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t{ completedCount > 0 && (\r\n\t\t\t\t\t<button class=\"clear-completed\" onClick={onClearCompleted}>\r\n\t\t\t\t\t\tClear completed\r\n\t\t\t\t\t</button>\r\n\t\t\t\t) }\r\n\t\t\t</footer>\r\n\t\t);\r\n\t}\r\n}\r\n","import { h, Component } from 'preact';\r\n\r\nconst ESCAPE_KEY = 27;\r\nconst ENTER_KEY = 13;\r\n\r\nexport default class TodoItem extends Component {\r\n\thandleSubmit = () => {\r\n\t\tlet { onSave, onDestroy, todo } = this.props,\r\n\t\t\tval = this.state.editText.trim();\r\n\t\tif (val) {\r\n\t\t\tonSave(todo, val);\r\n\t\t\tthis.setState({ editText: val });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tonDestroy(todo);\r\n\t\t}\r\n\t};\r\n\r\n\thandleEdit = () => {\r\n\t\tlet { onEdit, todo } = this.props;\r\n\t\tonEdit(todo);\r\n\t\tthis.setState({ editText: todo.title });\r\n\t};\r\n\r\n\ttoggle = e => {\r\n\t\tlet { onToggle, todo } = this.props;\r\n\t\tonToggle(todo);\r\n\t\te.preventDefault();\r\n\t};\r\n\r\n\thandleKeyDown = e => {\r\n\t\tif (e.which===ESCAPE_KEY) {\r\n\t\t\tlet { todo } = this.props;\r\n\t\t\tthis.setState({ editText: todo.title });\r\n\t\t\tthis.props.onCancel(todo);\r\n\t\t}\r\n\t\telse if (e.which===ENTER_KEY) {\r\n\t\t\tthis.handleSubmit();\r\n\t\t}\r\n\t};\r\n\t\r\n\thandleDestroy = () => {\r\n\t\tthis.props.onDestroy(this.props.todo);\r\n\t};\r\n\r\n\t// shouldComponentUpdate({ todo, editing, editText }) {\r\n\t// \treturn (\r\n\t// \t\ttodo !== this.props.todo ||\r\n\t// \t\tediting !== this.props.editing ||\r\n\t// \t\teditText !== this.state.editText\r\n\t// \t);\r\n\t// }\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tlet node = this.base && this.base.querySelector('.edit');\r\n\t\tif (node) node.focus();\r\n\t}\r\n\r\n\trender({ todo:{ title, completed }, onToggle, onDestroy, editing }, { editText }) {\r\n\t\treturn (\r\n\t\t\t<li class={{ completed, editing }}>\r\n\t\t\t\t<div class=\"view\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclass=\"toggle\"\r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tchecked={completed}\r\n\t\t\t\t\t\tonChange={this.toggle}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label onDblClick={this.handleEdit}>{title}</label>\r\n\t\t\t\t\t<button class=\"destroy\" onClick={this.handleDestroy} />\r\n\t\t\t\t</div>\r\n\t\t\t\t{ editing && (\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclass=\"edit\"\r\n\t\t\t\t\t\tvalue={editText}\r\n\t\t\t\t\t\tonBlur={this.handleSubmit}\r\n\t\t\t\t\t\tonInput={this.linkState('editText')}\r\n\t\t\t\t\t\tonKeyDown={this.handleKeyDown}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) }\r\n\t\t\t</li>\r\n\t\t);\r\n\t}\r\n}\r\n","import { h, Component } from 'preact';\r\nimport TodoModel from './model';\r\nimport TodoFooter from './footer';\r\nimport TodoItem from './item';\r\n\r\nconst ENTER_KEY = 13;\r\n\r\nconst FILTERS = {\r\n\tall: todo => true,\r\n\tactive: todo => !todo.completed,\r\n\tcompleted: todo => todo.completed\r\n};\r\n\r\nexport default class App extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.model = new TodoModel('preact-todos', () => this.setState({}) );\r\n\t\taddEventListener('hashchange', this.handleRoute.bind(this));\r\n\t\tthis.handleRoute();\r\n\t}\r\n\r\n\thandleRoute() {\r\n\t\tlet nowShowing = String(location.hash||'').split('/').pop();\r\n\t\tif (!FILTERS[nowShowing]) {\r\n\t\t\tnowShowing = 'all';\r\n\t\t}\r\n\t\tthis.setState({ nowShowing });\r\n\t}\r\n\r\n\thandleNewTodoKeyDown = e => {\r\n\t\tif (e.keyCode!==ENTER_KEY) return;\r\n\t\te.preventDefault();\r\n\r\n\t\tlet val = this.state.newTodo.trim();\r\n\t\tif (val) {\r\n\t\t\tthis.model.addTodo(val);\r\n\t\t\tthis.setState({ newTodo: '' });\r\n\t\t}\r\n\t};\r\n\r\n\ttoggleAll = event => {\r\n\t\tlet checked = event.target.checked;\r\n\t\tthis.model.toggleAll(checked);\r\n\t};\r\n\r\n\ttoggle = todo => {\r\n\t\tthis.model.toggle(todo);\r\n\t};\r\n\r\n\tdestroy = todo => {\r\n\t\tthis.model.destroy(todo);\r\n\t};\r\n\r\n\tedit = todo => {\r\n\t\tthis.setState({ editing: todo.id });\r\n\t};\r\n\r\n\tsave = (todoToSave, text) => {\r\n\t\tthis.model.save(todoToSave, text);\r\n\t\tthis.setState({ editing: null });\r\n\t};\r\n\r\n\tcancel = () => {\r\n\t\tthis.setState({ editing: null });\r\n\t};\r\n\r\n\tclearCompleted = () => {\r\n\t\tthis.model.clearCompleted();\r\n\t};\r\n\r\n\trender({ }, { nowShowing=ALL_TODOS, newTodo, editing }) {\r\n\t\tlet { todos } = this.model,\r\n\t\t\tshownTodos = todos.filter( FILTERS[nowShowing] ),\r\n\t\t\tactiveTodoCount = todos.reduce( (a, todo) => a + (todo.completed ? 0 : 1), 0),\r\n\t\t\tcompletedCount = todos.length - activeTodoCount;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<header class=\"header\">\r\n\t\t\t\t\t<h1>todos</h1>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclass=\"new-todo\"\r\n\t\t\t\t\t\tplaceholder=\"What needs to be done?\"\r\n\t\t\t\t\t\tvalue={newTodo}\r\n\t\t\t\t\t\tonKeyDown={this.handleNewTodoKeyDown}\r\n\t\t\t\t\t\tonInput={this.linkState('newTodo')}\r\n\t\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</header>\r\n\r\n\t\t\t\t{ todos.length ? (\r\n\t\t\t\t\t<section class=\"main\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclass=\"toggle-all\"\r\n\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\tonChange={this.toggleAll}\r\n\t\t\t\t\t\t\tchecked={activeTodoCount === 0}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ul class=\"todo-list\">\r\n\t\t\t\t\t\t\t{ shownTodos.map( todo => (\r\n\t\t\t\t\t\t\t\t<TodoItem\r\n\t\t\t\t\t\t\t\t\ttodo={todo}\r\n\t\t\t\t\t\t\t\t\tonToggle={this.toggle}\r\n\t\t\t\t\t\t\t\t\tonDestroy={this.destroy}\r\n\t\t\t\t\t\t\t\t\tonEdit={this.edit}\r\n\t\t\t\t\t\t\t\t\tediting={editing === todo.id}\r\n\t\t\t\t\t\t\t\t\tonSave={this.save}\r\n\t\t\t\t\t\t\t\t\tonCancel={this.cancel}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)) }\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</section>\r\n\t\t\t\t) : null }\r\n\r\n\t\t\t\t{ (activeTodoCount || completedCount) ? (\r\n\t\t\t\t\t<TodoFooter\r\n\t\t\t\t\t\tcount={activeTodoCount}\r\n\t\t\t\t\t\tcompletedCount={completedCount}\r\n\t\t\t\t\t\tnowShowing={nowShowing}\r\n\t\t\t\t\t\tonClearCompleted={this.clearCompleted}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : null }\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import { diff } from './vdom/diff';\n\n/** Render JSX into a `parent` Element.\n *\t@param {VNode} vnode\t\tA (JSX) VNode to render\n *\t@param {Element} parent\t\tDOM element to render into\n *\t@param {Element} [merge]\tAttempt to re-use an existing DOM tree rooted at `merge`\n *\t@public\n *\n *\t@example\n *\t// render a div into <body>:\n *\trender(<div id=\"hello\">hello!</div>, document.body);\n *\n *\t@example\n *\t// render a \"Thing\" component into #foo:\n *\tconst Thing = ({ name }) => <span>{ name }</span>;\n *\trender(<Thing name=\"one\" />, document.querySelector('#foo'));\n */\nexport function render(vnode, parent, merge) {\n\treturn diff(merge, vnode, {}, false, parent);\n}\n","import { h, render } from 'preact';\r\nimport App from './app';\r\n// import 'todomvc-common';\r\n// import 'todomvc-common/base.css';\r\n// import 'todomvc-app-css/index.css';\r\n\r\nrender(<App />, document.querySelector('.todoapp'));\r\n"]}